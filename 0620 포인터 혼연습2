// mando pointer practice.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <stdio.h>
#include <stdlib.h> // 이거 필수
void swap(int *x, int *y);

void swap(int *x, int *y) {

	int temp;
	temp = *x;
	*x = *y;
	*y = temp;


}

//void sub(int x[]) {
//	for (int i = 0; i < 5; i++) {
//		x[i] = i;
//	}
//}
void sub(int* b) {
	b[0] = 4;
	b[1] = 5;
	b[2] = 6;
	*b = 4;
	*(b + 1) = 5;
	*(b + 2) = 6;
}
int main()
{
	int x[5];
	sub(x);
	for (int i = 0; i < 3; i++) {
		printf("x[%d]= %d\n",i,x[i]);

	}
	//int a = 100, b = 200;
	//printf("a=%d b=%d\n", a, b);
	//swap(&a, &b);

	//printf("a=%d b=%d\n", a, b);

	//// scanf() 함수는 변수에 값 저장하기 위해서 변수의 주소를 받음
	//int x;
	//printf("값 대입");
	//
	//scanf_s("%d\n", &x);
	//printf("x=%d\n", x);
	

	//지역변수는 함수 호출이 종료되면 사라지므로 지역 변수의 주소 반환하면 안됨 -> 오류
	//함수 종료되더라도 남아있는 변수 주소 반환하여야 함
	// 지역

	//값에 의한 호출 -> 변수의 복사본이 매개변수로 전달
	//참조에 의한 호출-> 변수의 원본이 매개변수로 전달
	//그래서 포인터를 사용해 인수를 전달

	//배열 이름이 포인터
	//포인터는 배열처럼 사용 가능

	//int a[] = { 10,20,30,40,50 };
	//printf("&a [0]은  %u\n", &a[0]);
	//printf("&a [1]은  %u\n", &a[1]);
	//printf("&a [2]은  %u\n", &a[2]);
	//printf("&a [3]은  %u", &a[3]);

	//int a[] = { 10,20,30,40,50 };

	//printf("a= %u\n", a);
	//printf("a+1= %u\n", a+1);
	//printf("*a= %u\n", *a);
	//printf("*(a+1)= %u\n", *(a + 1));
	int a[] = { 10, 20, 30, 40, 50 };
	int* p;

	p = a;
	printf("a[0]=%d a[1]=%d a[2]=%d \n", a[0], a[1], a[2]);
	printf("p[0]=%d p[1]=%d p[2]=%d \n\n", p[0], p[1], p[2]);

	p[0] = 60;
	p[1] = 70;
	p[2] = 80;

	printf("a[0]=%d a[1]=%d a[2]=%d \n", a[0], a[1], a[2]);
	printf("p[0]=%d p[1]=%d p[2]=%d \n", p[0], p[1], p[2]);
	return 0;


}
